{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAaA,SAASC,EAAcC,EAAUC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACxC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5BC,YAAW,WACT,GAAIN,EACF,OAAOI,EAAQ,CAACN,WAASC,UAEtBM,EAAO,CAACP,WAASC,YACtBA,MAVOQ,SAASC,cAAc,SAc/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAIN,IAHA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OACvCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OACxCG,EAAI,EAAGA,EAAID,EAAQC,IAC1BrB,EAAcqB,EAAI,EAAGN,GAClBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBJ,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAE9Da,GAASI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n     const shouldResolve = Math.random() > 0.3;\n   return new Promise((resolve, rejekt) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve({position,delay})\n      }\n      else rejekt({position,delay})\n    },delay);\n  })\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n});"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","rejekt","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.58320bbf.js.map"}