{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAaA,SAASC,EAAcC,EAAUC,GAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACxC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KACT,GAAIN,EACF,OAAOI,EAAQ,C,SAACN,E,MAASC,IAEtBM,EAAO,C,SAACP,E,MAASC,MACtBA,MAVOQ,SAASC,cAAc,SAc/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OAC7C,MAAMC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OACjD,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1BrB,EAAcqB,EAAI,EAAGN,GAClBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,UAEtDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOG,QAAQ,sBAAoBzB,QAAeC,UAEtDa,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n     const shouldResolve = Math.random() > 0.3;\n   return new Promise((resolve, rejekt) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve({position,delay})\n      }\n      else rejekt({position,delay})\n    },delay);\n  })\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n});"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","rejekt","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.39a5f43f.js.map"}